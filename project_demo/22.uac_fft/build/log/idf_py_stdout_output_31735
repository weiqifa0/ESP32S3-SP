[1/11] Performing build step for 'bootloader'
[1/1] cd /Users/crisqifawei/esp/ESP32S3-SP/22.uac_fft/build/bootloader/esp-idf/esptool_py && /Users/crisqifawei/.espressif/python_env/idf5.0_py3.9_env/bin/python /Users/crisqifawei/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /Users/crisqifawei/esp/ESP32S3-SP/22.uac_fft/build/bootloader/bootloader.bin
Bootloader binary size 0x5d10 bytes. 0x22f0 bytes (27%) free.
[2/11] No install step for 'bootloader'
[3/11] Completed 'bootloader'
[4/11] Building C object esp-idf/lvgl_esp32_drivers/CMakeFiles/__idf_lvgl_esp32_drivers.dir/lvgl_tft/st7789.c.obj
[5/11] Linking C static library esp-idf/lvgl_esp32_drivers/liblvgl_esp32_drivers.a
[6/11] Linking C static library esp-idf/main/libmain.a
[7/11] Generating ld/sections.ld
[8/11] Building C object CMakeFiles/hello-world.elf.dir/project_elf_src_esp32s3.c.obj
[9/11] Linking CXX executable hello-world.elf
[10/11] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /Users/crisqifawei/esp/ESP32S3-SP/22.uac_fft/build/hello-world.bin
[11/11] cd /Users/crisqifawei/esp/ESP32S3-SP/22.uac_fft/build/esp-idf/esptool_py && /Users/crisqifawei/.espressif/python_env/idf5.0_py3.9_env/bin/python /Users/crisqifawei/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/crisqifawei/esp/ESP32S3-SP/22.uac_fft/build/partition_table/partition-table.bin /Users/crisqifawei/esp/ESP32S3-SP/22.uac_fft/build/hello-world.bin
hello-world.bin binary size 0x748e0 bytes. Smallest app partition is 0x55f000 bytes. 0x4ea720 bytes (92%) free.
